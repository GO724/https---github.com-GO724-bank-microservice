// Code generated by go-swagger; DO NOT EDIT.

package admins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// AddPersonReader is a Reader for the AddPerson structure.
type AddPersonReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddPersonReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddPersonCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddPersonBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAddPersonConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /persons] addPerson", response, response.Code())
	}
}

// NewAddPersonCreated creates a AddPersonCreated with default headers values
func NewAddPersonCreated() *AddPersonCreated {
	return &AddPersonCreated{}
}

/*
AddPersonCreated describes a response with status code 201, with default header values.

person created
*/
type AddPersonCreated struct {
}

// IsSuccess returns true when this add person created response has a 2xx status code
func (o *AddPersonCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add person created response has a 3xx status code
func (o *AddPersonCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add person created response has a 4xx status code
func (o *AddPersonCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add person created response has a 5xx status code
func (o *AddPersonCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add person created response a status code equal to that given
func (o *AddPersonCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add person created response
func (o *AddPersonCreated) Code() int {
	return 201
}

func (o *AddPersonCreated) Error() string {
	return fmt.Sprintf("[POST /persons][%d] addPersonCreated", 201)
}

func (o *AddPersonCreated) String() string {
	return fmt.Sprintf("[POST /persons][%d] addPersonCreated", 201)
}

func (o *AddPersonCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddPersonBadRequest creates a AddPersonBadRequest with default headers values
func NewAddPersonBadRequest() *AddPersonBadRequest {
	return &AddPersonBadRequest{}
}

/*
AddPersonBadRequest describes a response with status code 400, with default header values.

invalid input, object invalid
*/
type AddPersonBadRequest struct {
}

// IsSuccess returns true when this add person bad request response has a 2xx status code
func (o *AddPersonBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add person bad request response has a 3xx status code
func (o *AddPersonBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add person bad request response has a 4xx status code
func (o *AddPersonBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add person bad request response has a 5xx status code
func (o *AddPersonBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add person bad request response a status code equal to that given
func (o *AddPersonBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add person bad request response
func (o *AddPersonBadRequest) Code() int {
	return 400
}

func (o *AddPersonBadRequest) Error() string {
	return fmt.Sprintf("[POST /persons][%d] addPersonBadRequest", 400)
}

func (o *AddPersonBadRequest) String() string {
	return fmt.Sprintf("[POST /persons][%d] addPersonBadRequest", 400)
}

func (o *AddPersonBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddPersonConflict creates a AddPersonConflict with default headers values
func NewAddPersonConflict() *AddPersonConflict {
	return &AddPersonConflict{}
}

/*
AddPersonConflict describes a response with status code 409, with default header values.

person already exists
*/
type AddPersonConflict struct {
}

// IsSuccess returns true when this add person conflict response has a 2xx status code
func (o *AddPersonConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add person conflict response has a 3xx status code
func (o *AddPersonConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add person conflict response has a 4xx status code
func (o *AddPersonConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this add person conflict response has a 5xx status code
func (o *AddPersonConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this add person conflict response a status code equal to that given
func (o *AddPersonConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the add person conflict response
func (o *AddPersonConflict) Code() int {
	return 409
}

func (o *AddPersonConflict) Error() string {
	return fmt.Sprintf("[POST /persons][%d] addPersonConflict", 409)
}

func (o *AddPersonConflict) String() string {
	return fmt.Sprintf("[POST /persons][%d] addPersonConflict", 409)
}

func (o *AddPersonConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
