// Code generated by go-swagger; DO NOT EDIT.

package admins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"bank-microservice/api/models"
)

// NewAddbankParams creates a new AddbankParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAddbankParams() *AddbankParams {
	return &AddbankParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAddbankParamsWithTimeout creates a new AddbankParams object
// with the ability to set a timeout on a request.
func NewAddbankParamsWithTimeout(timeout time.Duration) *AddbankParams {
	return &AddbankParams{
		timeout: timeout,
	}
}

// NewAddbankParamsWithContext creates a new AddbankParams object
// with the ability to set a context for a request.
func NewAddbankParamsWithContext(ctx context.Context) *AddbankParams {
	return &AddbankParams{
		Context: ctx,
	}
}

// NewAddbankParamsWithHTTPClient creates a new AddbankParams object
// with the ability to set a custom HTTPClient for a request.
func NewAddbankParamsWithHTTPClient(client *http.Client) *AddbankParams {
	return &AddbankParams{
		HTTPClient: client,
	}
}

/*
AddbankParams contains all the parameters to send to the API endpoint

	for the addbank operation.

	Typically these are written to a http.Request.
*/
type AddbankParams struct {

	/* Bank.

	   bank to add
	*/
	Bank *models.Bank

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the addbank params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddbankParams) WithDefaults() *AddbankParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the addbank params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddbankParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the addbank params
func (o *AddbankParams) WithTimeout(timeout time.Duration) *AddbankParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the addbank params
func (o *AddbankParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the addbank params
func (o *AddbankParams) WithContext(ctx context.Context) *AddbankParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the addbank params
func (o *AddbankParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the addbank params
func (o *AddbankParams) WithHTTPClient(client *http.Client) *AddbankParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the addbank params
func (o *AddbankParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBank adds the bank to the addbank params
func (o *AddbankParams) WithBank(bank *models.Bank) *AddbankParams {
	o.SetBank(bank)
	return o
}

// SetBank adds the bank to the addbank params
func (o *AddbankParams) SetBank(bank *models.Bank) {
	o.Bank = bank
}

// WriteToRequest writes these params to a swagger request
func (o *AddbankParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Bank != nil {
		if err := r.SetBodyParam(o.Bank); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
