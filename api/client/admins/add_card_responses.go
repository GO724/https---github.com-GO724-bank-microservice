// Code generated by go-swagger; DO NOT EDIT.

package admins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// AddCardReader is a Reader for the AddCard structure.
type AddCardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddCardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddCardCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddCardBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAddCardConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cards] addCard", response, response.Code())
	}
}

// NewAddCardCreated creates a AddCardCreated with default headers values
func NewAddCardCreated() *AddCardCreated {
	return &AddCardCreated{}
}

/*
AddCardCreated describes a response with status code 201, with default header values.

card created
*/
type AddCardCreated struct {
}

// IsSuccess returns true when this add card created response has a 2xx status code
func (o *AddCardCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add card created response has a 3xx status code
func (o *AddCardCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add card created response has a 4xx status code
func (o *AddCardCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add card created response has a 5xx status code
func (o *AddCardCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add card created response a status code equal to that given
func (o *AddCardCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add card created response
func (o *AddCardCreated) Code() int {
	return 201
}

func (o *AddCardCreated) Error() string {
	return fmt.Sprintf("[POST /cards][%d] addCardCreated", 201)
}

func (o *AddCardCreated) String() string {
	return fmt.Sprintf("[POST /cards][%d] addCardCreated", 201)
}

func (o *AddCardCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddCardBadRequest creates a AddCardBadRequest with default headers values
func NewAddCardBadRequest() *AddCardBadRequest {
	return &AddCardBadRequest{}
}

/*
AddCardBadRequest describes a response with status code 400, with default header values.

invalid input, object invalid
*/
type AddCardBadRequest struct {
}

// IsSuccess returns true when this add card bad request response has a 2xx status code
func (o *AddCardBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add card bad request response has a 3xx status code
func (o *AddCardBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add card bad request response has a 4xx status code
func (o *AddCardBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add card bad request response has a 5xx status code
func (o *AddCardBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add card bad request response a status code equal to that given
func (o *AddCardBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add card bad request response
func (o *AddCardBadRequest) Code() int {
	return 400
}

func (o *AddCardBadRequest) Error() string {
	return fmt.Sprintf("[POST /cards][%d] addCardBadRequest", 400)
}

func (o *AddCardBadRequest) String() string {
	return fmt.Sprintf("[POST /cards][%d] addCardBadRequest", 400)
}

func (o *AddCardBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddCardConflict creates a AddCardConflict with default headers values
func NewAddCardConflict() *AddCardConflict {
	return &AddCardConflict{}
}

/*
AddCardConflict describes a response with status code 409, with default header values.

card already exists
*/
type AddCardConflict struct {
}

// IsSuccess returns true when this add card conflict response has a 2xx status code
func (o *AddCardConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add card conflict response has a 3xx status code
func (o *AddCardConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add card conflict response has a 4xx status code
func (o *AddCardConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this add card conflict response has a 5xx status code
func (o *AddCardConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this add card conflict response a status code equal to that given
func (o *AddCardConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the add card conflict response
func (o *AddCardConflict) Code() int {
	return 409
}

func (o *AddCardConflict) Error() string {
	return fmt.Sprintf("[POST /cards][%d] addCardConflict", 409)
}

func (o *AddCardConflict) String() string {
	return fmt.Sprintf("[POST /cards][%d] addCardConflict", 409)
}

func (o *AddCardConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
