// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"bank-microservice/api/client/admins"

	"github.com/spf13/cobra"
)

// makeOperationAdminsGetCardCmd returns a command to handle operation getCard
func makeOperationAdminsGetCardCmd() (*cobra.Command, error) {
	cmd := &cobra.Command{
		Use:   "getCard",
		Short: `Gets an card from the system`,
		RunE:  runOperationAdminsGetCard,
	}

	if err := registerOperationAdminsGetCardParamFlags(cmd); err != nil {
		return nil, err
	}

	return cmd, nil
}

// runOperationAdminsGetCard uses cmd flags to call endpoint api
func runOperationAdminsGetCard(cmd *cobra.Command, args []string) error {
	appCli, err := makeClient(cmd, args)
	if err != nil {
		return err
	}
	// retrieve flag values from cmd and fill params
	params := admins.NewGetCardParams()
	if err, _ = retrieveOperationAdminsGetCardInnFlag(params, "", cmd); err != nil {
		return err
	}
	if dryRun {
		logDebugf("dry-run flag specified. Skip sending request.")
		return nil
	}
	// make request and then print result
	msgStr, err := parseOperationAdminsGetCardResult(appCli.Admins.GetCard(params))
	if err != nil {
		return err
	}

	if !debug {
		fmt.Println(msgStr)
	}

	return nil
}

// registerOperationAdminsGetCardParamFlags registers all flags needed to fill params
func registerOperationAdminsGetCardParamFlags(cmd *cobra.Command) error {
	if err := registerOperationAdminsGetCardInnParamFlags("", cmd); err != nil {
		return err
	}
	return nil
}

func registerOperationAdminsGetCardInnParamFlags(cmdPrefix string, cmd *cobra.Command) error {

	flagInnDescription := `Required. get card`

	var flagInnName string
	if cmdPrefix == "" {
		flagInnName = "inn"
	} else {
		flagInnName = fmt.Sprintf("%v.inn", cmdPrefix)
	}

	var flagInnDefault int64

	_ = cmd.PersistentFlags().Int64(flagInnName, flagInnDefault, flagInnDescription)

	return nil
}

func retrieveOperationAdminsGetCardInnFlag(m *admins.GetCardParams, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false
	if cmd.Flags().Changed("inn") {

		var flagInnName string
		if cmdPrefix == "" {
			flagInnName = "inn"
		} else {
			flagInnName = fmt.Sprintf("%v.inn", cmdPrefix)
		}

		flagInnValue, err := cmd.Flags().GetInt64(flagInnName)
		if err != nil {
			return err, false
		}
		m.Inn = flagInnValue

	}

	return nil, retAdded
}

// parseOperationAdminsGetCardResult parses request result and return the string content
func parseOperationAdminsGetCardResult(resp0 *admins.GetCardCreated, respErr error) (string, error) {
	if respErr != nil {

		// Non schema case: warning getCardCreated is not supported

		// Non schema case: warning getCardBadRequest is not supported

		// Non schema case: warning getCardConflict is not supported

		return "", respErr
	}

	// warning: non schema response getCardCreated is not supported by go-swagger cli yet.

	return "", nil
}
