// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bank-microservice/api/models"
	"fmt"

	"github.com/spf13/cobra"
)

// Schema cli for Person

// register flags to command
func registerModelPersonFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerPersonPropInn(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPersonPropName(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerPersonPropInn(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: primitive inn uint64 is not supported by go-swagger cli yet

	return nil
}

func registerPersonPropName(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagNameDescription := `Required. `

	var flagNameName string
	if cmdPrefix == "" {
		flagNameName = "name"
	} else {
		flagNameName = fmt.Sprintf("%v.name", cmdPrefix)
	}

	var flagNameDefault string

	_ = cmd.PersistentFlags().String(flagNameName, flagNameDefault, flagNameDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelPersonFlags(depth int, m *models.Person, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, InnAdded := retrievePersonPropInnFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || InnAdded

	err, NameAdded := retrievePersonPropNameFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || NameAdded

	return nil, retAdded
}

func retrievePersonPropInnFlags(depth int, m *models.Person, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagInnName := fmt.Sprintf("%v.inn", cmdPrefix)
	if cmd.Flags().Changed(flagInnName) {

		// warning: primitive inn uint64 is not supported by go-swagger cli yet

		retAdded = true
	}

	return nil, retAdded
}

func retrievePersonPropNameFlags(depth int, m *models.Person, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagNameName := fmt.Sprintf("%v.name", cmdPrefix)
	if cmd.Flags().Changed(flagNameName) {

		var flagNameName string
		if cmdPrefix == "" {
			flagNameName = "name"
		} else {
			flagNameName = fmt.Sprintf("%v.name", cmdPrefix)
		}

		flagNameValue, err := cmd.Flags().GetString(flagNameName)
		if err != nil {
			return err, false
		}
		m.Name = &flagNameValue

		retAdded = true
	}

	return nil, retAdded
}
